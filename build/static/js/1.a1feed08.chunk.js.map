{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","pages/qsp/index.js","pages/qsp/test-generator/TestGenerator.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","Index","Box","TestGenerator","testCategories","styles","preview","marginTop","marginBottom","fontSize","opacity","testPage","padding","transformOrigin","transform","chapter","printButton","position","top","right","questions","columnCount","question","breakInside","breakBefore","text","margin","alternatives","listStyle","testOptions","input","alternative","prevState","localStorage","getItem","state","JSON","parse","bookName","testCategory","newQuestion","questionChapter","A","B","C","D","bookChapters","bindInput","bind","updateTest","addQuestion","removeQuestion","setItem","stringify","this","e","setState","curr","theState","target","newValue","console","log","preventDefault","Array","isArray","push","storeState","reset","questionNumber","style","container","item","onInput","variant","label","multiline","required","type","placeholder","alignItems","color","endIcon","onClick","select","helperText","defaultValue","onChange","map","i","selected","elevation","window","print","Date","toLocaleString","year","direction","chapterQuestions","chapterNumber","undefined","questionIndex","removeButton"],"mappings":"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","file":"static/js/1.a1feed08.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { Container, Box } from \"@material-ui/core\";\nimport { TestGenerator } from \"./test-generator/TestGenerator\";\n\nfunction Index() {\n\n    return (\n        <Container className=\"qsp\">\n            <h1>Quem Sabe Prova</h1>\n            <small>Criação de prova</small>\n            <br />\n            <Box className=\"testBox\">\n                <TestGenerator />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Index;","import { Box, TextField, MenuItem, Grid, Paper, Button, Fab } from \"@material-ui/core\";\nimport { Add, Remove, Print } from \"@material-ui/icons\";\n\nimport React from \"react\";\n\nconst testCategories = [\n    \"Categoria A\",\n    \"Categoria B\",\n    \"Categoria C\",\n    \"Categoria D\"\n];\nconst styles = {\n    preview: {\n        display: \"block\",\n        marginTop: 32,\n        marginBottom: 8,\n        fontSize: 12,\n        opacity: .5\n    },\n    testPage: {\n        width: \"210mm\",\n        padding: \"1cm 2cm\",\n        transformOrigin: \"top left\",\n        transform: \"scale(.75)\",\n        chapter: {\n            marginTop: 0,\n        },\n        printButton: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            transform: \"translate(50%, -50%)\"\n        },\n        questions: {\n            display: \"block\",\n            marginTop: \"32px\",\n            columnCount: 3,\n            question: {\n                display: \"inline-block\",\n                width: \"100%\",\n                breakInside: \"avoid\",\n                breakBefore: \"column\",\n                text: {\n                    margin: 0,\n                    marginTop: 4\n                },\n                alternatives: {\n                    listStyle: \"lower-alpha\"\n                }\n            }\n        }\n    },\n    testOptions: {\n        question: {\n            input: {\n                width: \"100%\",\n            },\n            alternative: {\n                width: \"100%\",\n                margin: \"12px 0\"\n            }\n        }\n    }\n};\n\nexport class TestGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        let prevState = localStorage.getItem(\"state\");\n        if(prevState){\n            this.state = JSON.parse(prevState);\n        }else {\n            this.state = {\n                bookName: \"\",\n                testCategory: testCategories[0],\n                newQuestion: {\n                    question: \"\",\n                    questionChapter: 0,\n                    A:\"\", B:\"\", C:\"\", D:\"\"\n                },\n                bookChapters: []\n            };\n        }\n\n        this.bindInput = this.bindInput.bind(this);\n        this.updateTest = this.updateTest.bind(this);\n        this.addQuestion = this.addQuestion.bind(this);\n        this.removeQuestion = this.removeQuestion.bind(this);\n    }\n\n    storeState() {\n        localStorage.setItem(\"state\", JSON.stringify(this.state));\n    }\n\n    bindInput(e) {\n        this.setState((curr)=>{\n            let theState = curr;\n            theState.newQuestion[e.target.name] = e.target.value;\n\n            return theState;\n        });\n    }\n\n    updateTest(e) {\n        let newValue = {};\n        newValue[e.target.name] = e.target.value;\n        console.log(newValue);\n        this.setState(newValue);\n    }\n\n    addQuestion(e) {\n        e.preventDefault();\n        console.log(e, this.state);\n\n        this.setState((curr)=>{\n            if(curr.newQuestion.question === \"\") return;\n\n            let theState = curr;\n\n            console.log(\"The Question: \", curr.newQuestion);\n            if(Array.isArray(theState.bookChapters[curr.newQuestion.questionChapter])) {\n                console.log(\"As Array: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n                theState.bookChapters[curr.newQuestion.questionChapter].push(curr.newQuestion);\n                console.log(\"As Array after: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n            }else {\n                console.log(\"Not Array: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n                theState.bookChapters[curr.newQuestion.questionChapter] = [curr.newQuestion];\n                console.log(\"Not Array after: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n            }\n            \n            theState.newQuestion = {\n                question: \"\",\n                questionChapter: 0,\n                A:\"\", B:\"\", C:\"\", D:\"\"\n            };\n            //console.log(theState);\n            return theState;\n        },()=>{\n            this.storeState();\n            e.target.reset();\n        });\n    }\n\n    removeQuestion(chapter, question) {\n        this.setState((curr)=>{\n            console.log(curr);\n            delete curr.bookChapters[chapter][question];\n            return curr;\n        });\n    }\n\n    render(){\n        let questionNumber = 0;\n\n        return (\n            <Box className=\"testContainer\" style={{marginTop: 32}}>\n                <Grid container spacing={4} style={styles.testOptions}>\n                    <Grid item lg={6}>\n                        <h3>Adicionar pergunta</h3>\n                        <Grid container spacing={4}>\n                            <Grid item md={8}>\n                                <TextField onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"question\" label=\"Insira a pergunta\" multiline required />\n                            </Grid>\n                            <Grid item md={3}>\n                                <TextField onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"questionChapter\" label=\"Capítulo\" type=\"number\" required />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={4}>\n                            <Grid item lg={12}>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"A\" placeholder='Resposta \"A\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"B\" placeholder='Resposta \"B\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"C\" placeholder='Resposta \"C\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"D\" placeholder='Resposta \"D\"' required/>\n                            </Grid>\n                        </Grid>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    endIcon={<Add />}\n                                    onClick={this.addQuestion}>Inserir nova Pergunta</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <h3>Informações da Prova</h3>\n                        <Grid container spacing={4}>\n                            <Grid item lg={12}>\n                                <TextField\n                                    label=\"Nome do livro\"\n                                    variant=\"outlined\"\n                                    name=\"bookName\"\n                                    placeholder=\"Ex. O Libertador\"\n                                    onInput={this.updateTest} />\n                            </Grid>\n                            <Grid item lg={12}>\n                                <TextField\n                                    name=\"testCategory\"\n                                    select\n                                    label=\"Categoria\"\n                                    helperText=\"Selecione a categoria da prova\"\n                                    variant=\"outlined\"\n                                    defaultValue={testCategories[0]}\n                                    onChange={this.updateTest}>\n                                    {\n                                        testCategories.map((item,i) => (\n                                                <MenuItem value={item} selected={!i}>{item}</MenuItem>\n                                            )\n                                        )\n                                    }\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <span className=\"noPrint\" style={styles.preview}>Pré visualização</span>\n                <Paper className=\"test\" elevation={5} style={styles.testPage}>\n                    <Fab className=\"noPrint\" style={styles.testPage.printButton} color=\"primary\" onClick={()=>{window.print()}} aria-label=\"print\">\n                        <Print />\n                    </Fab>\n                    <h1>\n                        Quem Sabe Prova - { new Date().toLocaleString(\"pt-br\", {year: \"numeric\"})} - {this.state.bookName}\n                        <br/>\n                        { this.state.testCategory }\n                    </h1>\n                    <Grid container direction=\"column\">\n                        <Grid item lg={12}>\n                            <Grid container>\n                                <Grid item lg={8}>\n                                    <span>Nome: _______________________________________</span>\n                                </Grid>\n                                <Grid item lg={4}>\n                                    <span>Idade: _______</span>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={12}>\n                            <Grid container>\n                                <Grid item lg={8}>\n                                    <span>Clube: _______________________________________</span>\n                                </Grid>\n                                <Grid item lg={4}>\n                                    <span>Região: _______</span>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Box className=\"questions\" style={styles.testPage.questions}>\n                        {\n                            this.state.bookChapters.map((chapterQuestions, chapterNumber) => {\n                                let chapter = undefined;\n                                if(chapterQuestions){\n                                    chapter = (\n                                        <>\n                                            <h4 style={styles.testPage.chapter}>Capítulo {chapterNumber}</h4>\n                                            {\n                                                chapterQuestions.map(\n                                                    (question, questionIndex) => {\n                                                        questionNumber++;\n\n                                                        return (\n                                                            <Box style={styles.testPage.questions.question}>\n                                                                <Fab className=\"noPrint\" chapter={chapterNumber} question={questionIndex} style={styles.testPage.questions.removeButton} color=\"primary\" onClick={this.removeQuestion} aria-label=\"print\">\n                                                                    <Remove />\n                                                                </Fab>\n                                                                <h5 style={styles.testPage.questions.question.text}>{questionNumber}) {question.question}</h5>\n                                                                <ol style={styles.testPage.questions.question.alternatives}>\n                                                                    <li>{question.A}</li>\n                                                                    <li>{question.B}</li>\n                                                                    <li>{question.C}</li>\n                                                                    <li>{question.D}</li>\n                                                                </ol>\n                                                            </Box>\n                                                        );\n                                                    }\n                                                )\n                                            }\n                                        </>\n                                    )\n                                }\n\n                                return chapter;\n                            })\n                        }\n                    </Box>\n                </Paper>\n            </Box>\n        );\n    }\n}"],"sourceRoot":""}