{"version":3,"sources":["pages/qsp/test-generator/TestGenerator.js"],"names":["testCategories","styles","preview","display","marginTop","marginBottom","fontSize","opacity","testPage","width","padding","transformOrigin","transform","chapter","pageBreakAfter","printButton","position","top","right","questions","columnCount","question","breakInside","breakBefore","removeButton","height","margin","color","fontWeight","textAlign","float","text","alternatives","listStyle","testOptions","input","alternative","Questions","props","chapters","questionNumber","chapterNumber","chapterQuestions","bookChapters","push","style","map","questionIndex","size","className","onClick","removeQuestion","A","B","C","D","TestGenerator","prevState","localStorage","getItem","state","JSON","parse","bookName","testCategory","newQuestion","questionChapter","bindInput","bind","updateTest","setItem","stringify","this","e","setState","curr","theState","target","name","value","newValue","storeState","preventDefault","undefined","console","log","length","splice","theChapters","container","spacing","item","lg","md","onInput","variant","label","multiline","required","onChange","placeholder","alignItems","type","endIcon","addQuestion","select","helperText","defaultValue","i","selected","elevation","window","print","Date","toLocaleString","year","direction","cNumber","qIndex","React","Component"],"mappings":"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","file":"static/js/3.556137a5.chunk.js","sourcesContent":["import { Box, TextField, MenuItem, Grid, Paper, Button, IconButton, Fab } from \"@material-ui/core\";\r\nimport { Add, RemoveCircle, Print } from \"@material-ui/icons\";\r\n\r\nimport React from \"react\";\r\n\r\nconst testCategories = [\r\n    \"Categoria A\",\r\n    \"Categoria B\",\r\n    \"Categoria C\",\r\n    \"Categoria D\"\r\n];\r\nconst styles = {\r\n    preview: {\r\n        display: \"block\",\r\n        marginTop: 32,\r\n        marginBottom: 8,\r\n        fontSize: 12,\r\n        opacity: .5\r\n    },\r\n    testPage: {\r\n        width: \"210mm\",\r\n        padding: \"1cm 2cm\",\r\n        transformOrigin: \"top left\",\r\n        transform: \"scale(.75)\",\r\n        chapter: {\r\n            display: \"inline-block\",\r\n            marginTop: 0,\r\n            pageBreakAfter: \"avoid\"\r\n        },\r\n        printButton: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 0,\r\n            transform: \"translate(50%, -50%)\"\r\n        },\r\n        questions: {\r\n            display: \"block\",\r\n            marginTop: \"32px\",\r\n            columnCount: 3,\r\n            question: {\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n                breakInside: \"avoid\",\r\n                breakBefore: \"column\",\r\n                removeButton: {\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    margin: \"4px 0 0 0\",\r\n                    color: \"#FFF\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: 900,\r\n                    textAlign: \"center\",\r\n                    float: \"right\"\r\n                },\r\n                text: {\r\n                    margin: 0,\r\n                    marginTop: 4\r\n                },\r\n                alternatives: {\r\n                    listStyle: \"lower-alpha\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    testOptions: {\r\n        question: {\r\n            input: {\r\n                width: \"100%\",\r\n            },\r\n            alternative: {\r\n                width: \"100%\",\r\n                margin: \"12px 0\"\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction Questions(props){\r\n    let chapters = [];\r\n    var questionNumber = 0;\r\n\r\n    for (const chapterNumber in props.bookChapters) {\r\n        const chapterQuestions = props.bookChapters[chapterNumber];\r\n        //console.log(chapterQuestions);\r\n\r\n        chapters.push((\r\n            <>\r\n                <h4 style={styles.testPage.chapter}>Cap√≠tulo {chapterNumber}</h4>\r\n                {\r\n                    chapterQuestions.map(\r\n                        // eslint-disable-next-line no-loop-func\r\n                        (question, questionIndex) => {\r\n                            if(!question) return;\r\n                            questionNumber++;\r\n\r\n                            return (\r\n                                <Box style={styles.testPage.questions.question}>\r\n                                    <h5 style={styles.testPage.questions.question.text}>{questionNumber}) {question.question}\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            className=\"noPrint\"\r\n                                            style={styles.testPage.questions.question.removeButton}\r\n                                            onClick={()=>{props.removeQuestion(chapterNumber, questionIndex)}}\r\n                                            aria-label=\"delete\"><RemoveCircle color=\"secondary\" /></IconButton>\r\n                                    </h5>\r\n                                    <ol style={styles.testPage.questions.question.alternatives}>\r\n                                        <li key={\"qA\"}>{question.A}</li>\r\n                                        <li key={\"qB\"}>{question.B}</li>\r\n                                        <li key={\"qC\"}>{question.C}</li>\r\n                                        <li key={\"qD\"}>{question.D}</li>\r\n                                    </ol>\r\n                                </Box>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </>\r\n        ))\r\n    }\r\n\r\n    return chapters;\r\n}\r\n\r\nexport class TestGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let prevState = localStorage.getItem(\"state\");\r\n        if(prevState){\r\n            this.state = JSON.parse(prevState);\r\n        }else {\r\n            this.state = {\r\n                bookName: \"\",\r\n                testCategory: testCategories[0],\r\n                newQuestion: {\r\n                    question: \"\",\r\n                    questionChapter: \"\",\r\n                    A:\"\", B:\"\", C:\"\", D:\"\"\r\n                },\r\n                bookChapters: {}\r\n            };\r\n        }\r\n\r\n        this.bindInput = this.bindInput.bind(this);\r\n        this.updateTest = this.updateTest.bind(this);\r\n    }\r\n\r\n    storeState() {\r\n        //console.log(\"storeState\", JSON.stringify(this.state));\r\n        localStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    }\r\n\r\n    bindInput(e) {\r\n        this.setState((curr)=>{\r\n            let theState = curr;\r\n            theState.newQuestion[e.target.name] = e.target.value;\r\n\r\n            return theState;\r\n        });\r\n    }\r\n\r\n    updateTest(e) {\r\n        //console.log(\"updateTest\");\r\n        let newValue = {};\r\n        newValue[e.target.name] = e.target.value;\r\n        this.setState(newValue);\r\n        this.storeState();\r\n    }\r\n\r\n    addQuestion(e) {\r\n        e.preventDefault();\r\n        let theState = {...this.state};\r\n\r\n        //console.log(\"addQuestion\", this);\r\n        //console.log(\"Question\",theState.newQuestion.question);\r\n        \r\n        if(theState.newQuestion.question === \"\") return;\r\n\r\n        if(theState.bookChapters[theState.newQuestion.questionChapter] === undefined) {\r\n            theState.bookChapters[theState.newQuestion.questionChapter] = [{...theState.newQuestion}];\r\n        }else {\r\n            theState.bookChapters[theState.newQuestion.questionChapter].push({...theState.newQuestion});\r\n        }\r\n\r\n        theState.newQuestion = {\r\n            question: \"\",\r\n            questionChapter: theState.newQuestion.questionChapter,\r\n            A:\"\", B:\"\", C:\"\", D:\"\"\r\n        };\r\n\r\n        //console.log(\"theState\", theState);\r\n        this.setState(theState, ()=>{this.storeState();});\r\n    }\r\n\r\n    removeQuestion(chapter, question) {\r\n        //console.log(\"removeQuestion in chapter: \", chapter);\r\n\r\n        this.setState((curr)=>{\r\n            console.log(curr.bookChapters[chapter].length);\r\n            if(!curr.bookChapters[chapter] || curr.bookChapters[chapter].length === 0){\r\n                delete curr.bookChapters[chapter];\r\n                return curr;\r\n            }\r\n                \r\n            curr.bookChapters[chapter].splice(question, 1);\r\n\r\n            return curr;\r\n        }, this.storeState);\r\n    }\r\n\r\n    render(){\r\n        let theChapters = this.state.bookChapters;\r\n        return (\r\n            <Box className=\"testContainer\" style={{marginTop: 32}}>\r\n                <Grid container spacing={4} style={styles.testOptions}>\r\n                    <Grid item lg={6}>\r\n                        <h3>Adicionar pergunta</h3>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item md={8}>\r\n                                <TextField value={this.state.newQuestion.question} onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"question\" label=\"Insira a pergunta\" multiline required />\r\n                            </Grid>\r\n                            <Grid item md={3}>\r\n                                <TextField value={this.state.newQuestion.questionChapter} onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"questionChapter\" label=\"Cap√≠tulo\" required />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item lg={12}>\r\n                                <TextField value={this.state.newQuestion.A} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"A\" placeholder='Resposta \"A\"' required/>\r\n                                <TextField value={this.state.newQuestion.B} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"B\" placeholder='Resposta \"B\"' required/>\r\n                                <TextField value={this.state.newQuestion.C} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"C\" placeholder='Resposta \"C\"' required/>\r\n                                <TextField value={this.state.newQuestion.D} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"D\" placeholder='Resposta \"D\"' required/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    endIcon={<Add />}\r\n                                    onClick={(e)=>{this.addQuestion(e)}}>Inserir nova Pergunta</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h3>Informa√ß√µes da Prova</h3>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item lg={12}>\r\n                                <TextField\r\n                                    label=\"Nome do livro\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"bookName\"\r\n                                    value={this.state.bookName}\r\n                                    placeholder=\"Ex. O Libertador\"\r\n                                    onInput={this.updateTest} />\r\n                            </Grid>\r\n                            <Grid item lg={12}>\r\n                                <TextField\r\n                                    name=\"testCategory\"\r\n                                    select\r\n                                    label=\"Categoria\"\r\n                                    helperText=\"Selecione a categoria da prova\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={this.state.testCategory}\r\n                                    onChange={this.updateTest}>\r\n                                    {\r\n                                        testCategories.map(\r\n                                            (item,i) => (\r\n                                                <MenuItem key={i} value={item} selected={!i}>{item}</MenuItem>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <span className=\"noPrint\" style={styles.preview}>Pr√© visualiza√ß√£o</span>\r\n                <Paper className=\"test\" elevation={5} style={styles.testPage}>\r\n                    <Fab className=\"noPrint\" style={styles.testPage.printButton} color=\"primary\" onClick={()=>{window.print()}} aria-label=\"print\">\r\n                        <Print />\r\n                    </Fab>\r\n                    <h1>\r\n                        Quem Sabe Prova - { new Date().toLocaleString(\"pt-br\", {year: \"numeric\"})} - {this.state.bookName}\r\n                        <br/>\r\n                        { this.state.testCategory }\r\n                    </h1>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item lg={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={8}>\r\n                                    <span>Nome: _______________________________________</span>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <span>Idade: _______</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item lg={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={8}>\r\n                                    <span>Clube: _______________________________________</span>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <span>Regi√£o: _______</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box className=\"questions\" style={styles.testPage.questions}>\r\n                        <Questions bookChapters={theChapters} removeQuestion={(cNumber, qIndex) => {this.removeQuestion(cNumber, qIndex)}} />\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}