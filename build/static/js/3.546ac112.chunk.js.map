{"version":3,"sources":["pages/qsp/test-generator/TestGenerator.js"],"names":["testCategories","styles","preview","display","marginTop","marginBottom","fontSize","opacity","testPage","width","padding","transformOrigin","transform","chapter","printButton","position","top","right","questions","columnCount","question","breakInside","breakBefore","text","margin","alternatives","listStyle","testOptions","input","alternative","TestGenerator","props","prevState","localStorage","getItem","state","JSON","parse","bookName","testCategory","newQuestion","questionChapter","A","B","C","D","bookChapters","bindInput","bind","updateTest","addQuestion","removeQuestion","setItem","stringify","this","e","setState","curr","theState","target","name","value","newValue","console","log","preventDefault","Array","isArray","push","storeState","reset","questionNumber","className","style","container","spacing","item","lg","md","onInput","variant","label","multiline","required","type","placeholder","alignItems","color","endIcon","select","helperText","defaultValue","onChange","map","i","selected","elevation","onClick","window","print","Date","toLocaleString","year","direction","chapterQuestions","chapterNumber","undefined","questionIndex","removeButton","React","Component"],"mappings":"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","file":"static/js/3.546ac112.chunk.js","sourcesContent":["import { Box, TextField, MenuItem, Grid, Paper, Button, Fab } from \"@material-ui/core\";\nimport { Add, Remove, Print } from \"@material-ui/icons\";\n\nimport React from \"react\";\n\nconst testCategories = [\n    \"Categoria A\",\n    \"Categoria B\",\n    \"Categoria C\",\n    \"Categoria D\"\n];\nconst styles = {\n    preview: {\n        display: \"block\",\n        marginTop: 32,\n        marginBottom: 8,\n        fontSize: 12,\n        opacity: .5\n    },\n    testPage: {\n        width: \"210mm\",\n        padding: \"1cm 2cm\",\n        transformOrigin: \"top left\",\n        transform: \"scale(.75)\",\n        chapter: {\n            marginTop: 0,\n        },\n        printButton: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            transform: \"translate(50%, -50%)\"\n        },\n        questions: {\n            display: \"block\",\n            marginTop: \"32px\",\n            columnCount: 3,\n            question: {\n                display: \"inline-block\",\n                width: \"100%\",\n                breakInside: \"avoid\",\n                breakBefore: \"column\",\n                text: {\n                    margin: 0,\n                    marginTop: 4\n                },\n                alternatives: {\n                    listStyle: \"lower-alpha\"\n                }\n            }\n        }\n    },\n    testOptions: {\n        question: {\n            input: {\n                width: \"100%\",\n            },\n            alternative: {\n                width: \"100%\",\n                margin: \"12px 0\"\n            }\n        }\n    }\n};\n\nexport class TestGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        let prevState = localStorage.getItem(\"state\");\n        if(prevState){\n            this.state = JSON.parse(prevState);\n        }else {\n            this.state = {\n                bookName: \"\",\n                testCategory: testCategories[0],\n                newQuestion: {\n                    question: \"\",\n                    questionChapter: 0,\n                    A:\"\", B:\"\", C:\"\", D:\"\"\n                },\n                bookChapters: []\n            };\n        }\n\n        this.bindInput = this.bindInput.bind(this);\n        this.updateTest = this.updateTest.bind(this);\n        this.addQuestion = this.addQuestion.bind(this);\n        this.removeQuestion = this.removeQuestion.bind(this);\n    }\n\n    storeState() {\n        localStorage.setItem(\"state\", JSON.stringify(this.state));\n    }\n\n    bindInput(e) {\n        this.setState((curr)=>{\n            let theState = curr;\n            theState.newQuestion[e.target.name] = e.target.value;\n\n            return theState;\n        });\n    }\n\n    updateTest(e) {\n        let newValue = {};\n        newValue[e.target.name] = e.target.value;\n        console.log(newValue);\n        this.setState(newValue);\n    }\n\n    addQuestion(e) {\n        e.preventDefault();\n        console.log(e, this.state);\n\n        this.setState((curr)=>{\n            if(curr.newQuestion.question === \"\") return;\n\n            let theState = curr;\n\n            console.log(\"The Question: \", curr.newQuestion);\n            if(Array.isArray(theState.bookChapters[curr.newQuestion.questionChapter])) {\n                console.log(\"As Array: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n                theState.bookChapters[curr.newQuestion.questionChapter].push(curr.newQuestion);\n                console.log(\"As Array after: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n            }else {\n                console.log(\"Not Array: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n                theState.bookChapters[curr.newQuestion.questionChapter] = [curr.newQuestion];\n                console.log(\"Not Array after: \", theState.bookChapters[curr.newQuestion.questionChapter]);\n            }\n            \n            theState.newQuestion = {\n                question: \"\",\n                questionChapter: 0,\n                A:\"\", B:\"\", C:\"\", D:\"\"\n            };\n            //console.log(theState);\n            return theState;\n        },()=>{\n            this.storeState();\n            e.target.reset();\n        });\n    }\n\n    removeQuestion(chapter, question) {\n        this.setState((curr)=>{\n            console.log(curr);\n            delete curr.bookChapters[chapter][question];\n            return curr;\n        });\n    }\n\n    render(){\n        let questionNumber = 0;\n\n        return (\n            <Box className=\"testContainer\" style={{marginTop: 32}}>\n                <Grid container spacing={4} style={styles.testOptions}>\n                    <Grid item lg={6}>\n                        <h3>Adicionar pergunta</h3>\n                        <Grid container spacing={4}>\n                            <Grid item md={8}>\n                                <TextField onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"question\" label=\"Insira a pergunta\" multiline required />\n                            </Grid>\n                            <Grid item md={3}>\n                                <TextField onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"questionChapter\" label=\"Capítulo\" type=\"number\" required />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={4}>\n                            <Grid item lg={12}>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"A\" placeholder='Resposta \"A\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"B\" placeholder='Resposta \"B\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"C\" placeholder='Resposta \"C\"' required/>\n                                <TextField style={styles.testOptions.question.alternative} onInput={this.bindInput} name=\"D\" placeholder='Resposta \"D\"' required/>\n                            </Grid>\n                        </Grid>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    endIcon={<Add />}>Inserir nova Pergunta</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <h3>Informações da Prova</h3>\n                        <Grid container spacing={4}>\n                            <Grid item lg={12}>\n                                <TextField\n                                    label=\"Nome do livro\"\n                                    variant=\"outlined\"\n                                    name=\"bookName\"\n                                    placeholder=\"Ex. O Libertador\"\n                                    onInput={this.updateTest} />\n                            </Grid>\n                            <Grid item lg={12}>\n                                <TextField\n                                    name=\"testCategory\"\n                                    select\n                                    label=\"Categoria\"\n                                    helperText=\"Selecione a categoria da prova\"\n                                    variant=\"outlined\"\n                                    defaultValue={testCategories[0]}\n                                    onChange={this.updateTest}>\n                                    {\n                                        testCategories.map((item,i) => (\n                                                <MenuItem value={item} selected={!i}>{item}</MenuItem>\n                                            )\n                                        )\n                                    }\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <span className=\"noPrint\" style={styles.preview}>Pré visualização</span>\n                <Paper className=\"test\" elevation={5} style={styles.testPage}>\n                    <Fab className=\"noPrint\" style={styles.testPage.printButton} color=\"primary\" onClick={()=>{window.print()}} aria-label=\"print\">\n                        <Print />\n                    </Fab>\n                    <h1>\n                        Quem Sabe Prova - { new Date().toLocaleString(\"pt-br\", {year: \"numeric\"})} - {this.state.bookName}\n                        <br/>\n                        { this.state.testCategory }\n                    </h1>\n                    <Grid container direction=\"column\">\n                        <Grid item lg={12}>\n                            <Grid container>\n                                <Grid item lg={8}>\n                                    <span>Nome: _______________________________________</span>\n                                </Grid>\n                                <Grid item lg={4}>\n                                    <span>Idade: _______</span>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={12}>\n                            <Grid container>\n                                <Grid item lg={8}>\n                                    <span>Clube: _______________________________________</span>\n                                </Grid>\n                                <Grid item lg={4}>\n                                    <span>Região: _______</span>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Box className=\"questions\" style={styles.testPage.questions}>\n                        {\n                            this.state.bookChapters.map((chapterQuestions, chapterNumber) => {\n                                let chapter = undefined;\n                                if(chapterQuestions){\n                                    chapter = (\n                                        <>\n                                            <h4 style={styles.testPage.chapter}>Capítulo {chapterNumber}</h4>\n                                            {\n                                                chapterQuestions.map(\n                                                    (question, questionIndex) => {\n                                                        questionNumber++;\n\n                                                        return (\n                                                            <Box style={styles.testPage.questions.question}>\n                                                                <Fab className=\"noPrint\" chapter={chapterNumber} question={questionIndex} style={styles.testPage.questions.removeButton} color=\"primary\" onClick={this.removeQuestion} aria-label=\"print\">\n                                                                    <Remove />\n                                                                </Fab>\n                                                                <h5 style={styles.testPage.questions.question.text}>{questionNumber}) {question.question}</h5>\n                                                                <ol style={styles.testPage.questions.question.alternatives}>\n                                                                    <li>{question.A}</li>\n                                                                    <li>{question.B}</li>\n                                                                    <li>{question.C}</li>\n                                                                    <li>{question.D}</li>\n                                                                </ol>\n                                                            </Box>\n                                                        );\n                                                    }\n                                                )\n                                            }\n                                        </>\n                                    )\n                                }\n\n                                return chapter;\n                            })\n                        }\n                    </Box>\n                </Paper>\n            </Box>\n        );\n    }\n}"],"sourceRoot":""}