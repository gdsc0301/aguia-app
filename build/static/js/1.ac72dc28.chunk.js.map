{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","pages/qsp/index.js","pages/qsp/test-generator/TestGenerator.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","Index","Box","TestGenerator","testCategories","styles","preview","marginTop","marginBottom","fontSize","opacity","testPage","padding","transformOrigin","transform","chapter","printButton","position","top","right","questions","columnCount","question","breakInside","breakBefore","removeButton","height","margin","color","fontWeight","textAlign","float","text","alternatives","listStyle","testOptions","input","alternative","Questions","chapters","questionNumber","chapterNumber","chapterQuestions","bookChapters","push","style","map","questionIndex","size","onClick","removeQuestion","A","B","C","D","prevState","localStorage","getItem","state","JSON","parse","bookName","testCategory","newQuestion","questionChapter","bindInput","bind","updateTest","setItem","stringify","this","e","setState","curr","theState","target","newValue","storeState","preventDefault","undefined","console","log","length","splice","theChapters","container","item","onInput","variant","label","multiline","required","onChange","placeholder","alignItems","type","endIcon","addQuestion","select","helperText","defaultValue","i","selected","elevation","window","print","Date","toLocaleString","year","direction","cNumber","qIndex"],"mappings":"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","file":"static/js/1.ac72dc28.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { Container, Box } from \"@material-ui/core\";\r\nimport { TestGenerator } from \"./test-generator/TestGenerator\";\r\n\r\nfunction Index() {\r\n\r\n    return (\r\n        <Container className=\"qsp\">\r\n            <h1>Quem Sabe Prova</h1>\r\n            <small>Criação de prova</small>\r\n            <br />\r\n            <Box className=\"testBox\">\r\n                <TestGenerator />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Index;","import { Box, TextField, MenuItem, Grid, Paper, Button, IconButton, Fab } from \"@material-ui/core\";\r\nimport { Add, RemoveCircle, Print } from \"@material-ui/icons\";\r\n\r\nimport React from \"react\";\r\n\r\nconst testCategories = [\r\n    \"Categoria A\",\r\n    \"Categoria B\",\r\n    \"Categoria C\",\r\n    \"Categoria D\"\r\n];\r\nconst styles = {\r\n    preview: {\r\n        display: \"block\",\r\n        marginTop: 32,\r\n        marginBottom: 8,\r\n        fontSize: 12,\r\n        opacity: .5\r\n    },\r\n    testPage: {\r\n        width: \"210mm\",\r\n        padding: \"1cm 2cm\",\r\n        transformOrigin: \"top left\",\r\n        transform: \"scale(.75)\",\r\n        chapter: {\r\n            marginTop: 0,\r\n        },\r\n        printButton: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 0,\r\n            transform: \"translate(50%, -50%)\"\r\n        },\r\n        questions: {\r\n            display: \"block\",\r\n            marginTop: \"32px\",\r\n            columnCount: 3,\r\n            question: {\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n                breakInside: \"avoid\",\r\n                breakBefore: \"column\",\r\n                removeButton: {\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    margin: \"4px 0 0 0\",\r\n                    color: \"#FFF\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: 900,\r\n                    textAlign: \"center\",\r\n                    float: \"right\"\r\n                },\r\n                text: {\r\n                    margin: 0,\r\n                    marginTop: 4\r\n                },\r\n                alternatives: {\r\n                    listStyle: \"lower-alpha\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    testOptions: {\r\n        question: {\r\n            input: {\r\n                width: \"100%\",\r\n            },\r\n            alternative: {\r\n                width: \"100%\",\r\n                margin: \"12px 0\"\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction Questions(props){\r\n    let chapters = [];\r\n    var questionNumber = 0;\r\n\r\n    for (const chapterNumber in props.bookChapters) {\r\n        const chapterQuestions = props.bookChapters[chapterNumber];\r\n        //console.log(chapterQuestions);\r\n\r\n        chapters.push((\r\n            <>\r\n                <h4 style={styles.testPage.chapter}>Capítulo {chapterNumber}</h4>\r\n                {\r\n                    chapterQuestions.map(\r\n                        // eslint-disable-next-line no-loop-func\r\n                        (question, questionIndex) => {\r\n                            if(!question) return;\r\n                            questionNumber++;\r\n\r\n                            return (\r\n                                <Box style={styles.testPage.questions.question}>\r\n                                    <h5 style={styles.testPage.questions.question.text}>{questionNumber}) {question.question}\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            className=\"noPrint\"\r\n                                            style={styles.testPage.questions.question.removeButton}\r\n                                            onClick={()=>{props.removeQuestion(chapterNumber, questionIndex)}}\r\n                                            aria-label=\"delete\"><RemoveCircle color=\"secondary\" /></IconButton>\r\n                                    </h5>\r\n                                    <ol style={styles.testPage.questions.question.alternatives}>\r\n                                        <li key={\"qA\"}>{question.A}</li>\r\n                                        <li key={\"qB\"}>{question.B}</li>\r\n                                        <li key={\"qC\"}>{question.C}</li>\r\n                                        <li key={\"qD\"}>{question.D}</li>\r\n                                    </ol>\r\n                                </Box>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </>\r\n        ))\r\n    }\r\n\r\n    return chapters;\r\n}\r\n\r\nexport class TestGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let prevState = localStorage.getItem(\"state\");\r\n        if(prevState){\r\n            this.state = JSON.parse(prevState);\r\n        }else {\r\n            this.state = {\r\n                bookName: \"\",\r\n                testCategory: testCategories[0],\r\n                newQuestion: {\r\n                    question: \"\",\r\n                    questionChapter: \"\",\r\n                    A:\"\", B:\"\", C:\"\", D:\"\"\r\n                },\r\n                bookChapters: {}\r\n            };\r\n        }\r\n\r\n        this.bindInput = this.bindInput.bind(this);\r\n        this.updateTest = this.updateTest.bind(this);\r\n    }\r\n\r\n    storeState() {\r\n        //console.log(\"storeState\", JSON.stringify(this.state));\r\n        localStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    }\r\n\r\n    bindInput(e) {\r\n        this.setState((curr)=>{\r\n            let theState = curr;\r\n            theState.newQuestion[e.target.name] = e.target.value;\r\n\r\n            return theState;\r\n        });\r\n    }\r\n\r\n    updateTest(e) {\r\n        //console.log(\"updateTest\");\r\n        let newValue = {};\r\n        newValue[e.target.name] = e.target.value;\r\n        this.setState(newValue);\r\n        this.storeState();\r\n    }\r\n\r\n    addQuestion(e) {\r\n        e.preventDefault();\r\n        let theState = {...this.state};\r\n\r\n        //console.log(\"addQuestion\", this);\r\n        //console.log(\"Question\",theState.newQuestion.question);\r\n        \r\n        if(theState.newQuestion.question === \"\") return;\r\n\r\n        if(theState.bookChapters[theState.newQuestion.questionChapter] === undefined) {\r\n            theState.bookChapters[theState.newQuestion.questionChapter] = [{...theState.newQuestion}];\r\n        }else {\r\n            theState.bookChapters[theState.newQuestion.questionChapter].push({...theState.newQuestion});\r\n        }\r\n\r\n        theState.newQuestion = {\r\n            question: \"\",\r\n            questionChapter: theState.newQuestion.question,\r\n            A:\"\", B:\"\", C:\"\", D:\"\"\r\n        };\r\n\r\n        console.log(\"theState\", theState);\r\n        this.setState(theState, ()=>{this.storeState();console.log(\"theState\", theState);});\r\n    }\r\n\r\n    removeQuestion(chapter, question) {\r\n        //console.log(\"removeQuestion in chapter: \", chapter);\r\n\r\n        this.setState((curr)=>{\r\n            //console.log(curr.bookChapters[chapter]);\r\n            if(!curr.bookChapters[chapter] || curr.bookChapters[chapter].length === 0 || (curr.bookChapters[chapter].length === 1 && !curr.bookChapters[chapter][0])){\r\n                delete curr.bookChapters[chapter];\r\n                return curr;\r\n            }\r\n                \r\n            curr.bookChapters[chapter].splice(question, 1);\r\n\r\n            return curr;\r\n        }, this.storeState);\r\n    }\r\n\r\n    render(){\r\n        let theChapters = this.state.bookChapters;\r\n        return (\r\n            <Box className=\"testContainer\" style={{marginTop: 32}}>\r\n                <Grid container spacing={4} style={styles.testOptions}>\r\n                    <Grid item lg={6}>\r\n                        <h3>Adicionar pergunta</h3>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item md={8}>\r\n                                <TextField value={this.state.newQuestion.question} onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"question\" label=\"Insira a pergunta\" multiline required />\r\n                            </Grid>\r\n                            <Grid item md={3}>\r\n                                <TextField value={this.state.newQuestion.questionChapter} onInput={this.bindInput} style={{...styles.testOptions.question.input, marginBottom: 16}} variant=\"outlined\" name=\"questionChapter\" label=\"Capítulo\" required />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item lg={12}>\r\n                                <TextField value={this.state.newQuestion.A} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"A\" placeholder='Resposta \"A\"' required/>\r\n                                <TextField value={this.state.newQuestion.B} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"B\" placeholder='Resposta \"B\"' required/>\r\n                                <TextField value={this.state.newQuestion.C} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"C\" placeholder='Resposta \"C\"' required/>\r\n                                <TextField value={this.state.newQuestion.D} style={styles.testOptions.question.alternative} onChange={this.bindInput} name=\"D\" placeholder='Resposta \"D\"' required/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    endIcon={<Add />}\r\n                                    onClick={(e)=>{this.addQuestion(e)}}>Inserir nova Pergunta</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h3>Informações da Prova</h3>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item lg={12}>\r\n                                <TextField\r\n                                    label=\"Nome do livro\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"bookName\"\r\n                                    value={this.state.bookName}\r\n                                    placeholder=\"Ex. O Libertador\"\r\n                                    onInput={this.updateTest} />\r\n                            </Grid>\r\n                            <Grid item lg={12}>\r\n                                <TextField\r\n                                    name=\"testCategory\"\r\n                                    select\r\n                                    label=\"Categoria\"\r\n                                    helperText=\"Selecione a categoria da prova\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={testCategories[0]}\r\n                                    onChange={this.updateTest}>\r\n                                    {\r\n                                        testCategories.map(\r\n                                            (item,i) => (\r\n                                                <MenuItem key={i} value={item} selected={!i}>{item}</MenuItem>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <span className=\"noPrint\" style={styles.preview}>Pré visualização</span>\r\n                <Paper className=\"test\" elevation={5} style={styles.testPage}>\r\n                    <Fab className=\"noPrint\" style={styles.testPage.printButton} color=\"primary\" onClick={()=>{window.print()}} aria-label=\"print\">\r\n                        <Print />\r\n                    </Fab>\r\n                    <h1>\r\n                        Quem Sabe Prova - { new Date().toLocaleString(\"pt-br\", {year: \"numeric\"})} - {this.state.bookName}\r\n                        <br/>\r\n                        { this.state.testCategory }\r\n                    </h1>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item lg={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={8}>\r\n                                    <span>Nome: _______________________________________</span>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <span>Idade: _______</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item lg={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={8}>\r\n                                    <span>Clube: _______________________________________</span>\r\n                                </Grid>\r\n                                <Grid item lg={4}>\r\n                                    <span>Região: _______</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box className=\"questions\" style={styles.testPage.questions}>\r\n                        <Questions bookChapters={theChapters} removeQuestion={(cNumber, qIndex) => {this.removeQuestion(cNumber, qIndex)}} />\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}